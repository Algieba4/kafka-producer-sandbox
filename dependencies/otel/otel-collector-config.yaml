receivers: # Define how the collector receives data (e.g., OTLP, Prometheus)
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors: # Define how the collector processes data (e.g., batching, resource detection)
  batch:

exporters: # Define where the collector sends data (e.g., Jaeger, Prometheus, Loki)
  # Data sources: traces
  otlp/jaeger:
    endpoint: jaeger:4317
    tls:
      insecure: true

  debug:
    verbosity: detailed

  # Data sources: metrics
  prometheus:
    endpoint: "0.0.0.0:8889"

  # TODO: look into Grafana Loki (for logs) and Grafana Tempo (for traces)
  # Grafana, Tempo + Loki + Prometheus = “LGTM stack” (modern observability stack).
  # Unified observability platform, all visible in Grafana

extensions:
  health_check:
  pprof:
  zpages:

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/jaeger]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheus]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug]